{"version":3,"sources":["helpers/fetch.js","types/types.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","helpers/prepareEvents.js","actions/events.js","components/ui/NavBar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseURL","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","checkingFinish","type","login","user","payload","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","res","json","ok","setItem","Date","getTime","uid","Swal","fire","placeholder","onChange","msg","prepareEvents","events","map","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","NavBar","useSelector","state","auth","onClick","clear","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","future","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","minDate","autoComplete","id","rows","mStart","mEnd","isSameOrAfter","trim","length","console","log","getState","_id","eventStartAddNew","AddNewFab","DeleteEventFab","localizer","momentLocalizer","CalendarScreen","lastView","setlastView","eventsStore","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","Error","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f4b1f09.chunk.js","sourcesContent":["const baseURL = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchSinToken = (endpoint, data, method = 'GET') => {\r\n    \r\n    const url = `${baseURL}/${endpoint}`;\r\n    if( method === 'GET' ){\r\n        return fetch(url)\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n}\r\n\r\nexport const fetchConToken = (endpoint, data, method = 'GET') => {\r\n    \r\n    const url = `${baseURL}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if( method === 'GET' ){\r\n        return fetch(url, {\r\n            method,\r\n            headers : {\r\n                'x-token': token\r\n            }\r\n        })\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n}","export const types = {\r\n\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout: '[event] Logout Events',\r\n    eventStartAddNew: '[event] Start Add New',\r\n    eventAddNew: '[event] Add New',\r\n    eventClearActiveEvent: '[event] Clear Active Event',\r\n    eventUpdate: '[event] Event Update',\r\n    eventDeleted: '[event] Event Deleted',\r\n    eventLoaded: '[event] Events Loaded',\r\n\r\n    authCheckingFinish: '[auth] Finish Checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start Token Renew',\r\n    authLogout: '[auth] Logout',\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async(dispatch) => {\r\n        const res = await fetchSinToken('auth', {email, password}, 'POST');\r\n        const body = await res.json();\r\n        \r\n        if( body.ok ){\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            Swal.fire('Error', 'Incorrect user credentials!', 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (name, email, password) => {\r\n    return async(dispatch) => {\r\n        const res = await fetchSinToken('auth/new', {name, email, password}, 'POST');\r\n        const body = await res.json();\r\n\r\n        if (body.ok){\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg || 'Could not register user!', 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n\r\n        try{\r\n            const res = await fetchConToken('auth/renew');\r\n            const body = await res.json();\r\n    \r\n            if (body.ok){\r\n                localStorage.setItem( 'token', body.token );\r\n                localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n                dispatch( login({\r\n                    uid: body.uid,\r\n                    name: body.name\r\n                }));\r\n    \r\n            } else {\r\n                dispatch( checkingFinish() )\r\n                throw new Error(body.msg || 'Error!');\r\n            }\r\n        } catch(e){\r\n            console.log(e.msg || 'Error al validar token');\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish })\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return async(dispatch) => {\r\n        localStorage.clear();\r\n        dispatch( logout() )\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout })","import { useState } from \"react\"\r\n\r\nexport const useForm = ( initialState={} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n        \r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n    setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    return [values, handleInputChange, reset]\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\n\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: '',\r\n        lPassword: ''\r\n    });\r\n    const {lEmail, lPassword} = formLoginValues;\r\n    // ------\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName: '',\r\n        rEmail: '',\r\n        rPassword1: '',\r\n        rPassword2: ''\r\n    });\r\n    const {rName, rEmail, rPassword1, rPassword2} = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startLogin(lEmail, lPassword) );\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if( rPassword1 !== rPassword2 ){\r\n            return Swal.fire('Error', 'Thy passwords shall match!')\r\n        }\r\n        dispatch( startRegister(rName, rEmail, rPassword1) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Login</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"password\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Sign Up</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Name\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"password\"\r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange} \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Confirm password\"\r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange} \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Create account\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import moment from \"moment\"\r\n\r\nexport const prepareEvents = (events = []) => {\r\n    return events.map( e => ({\r\n        ...e,\r\n        end: moment(e.end).toDate(),\r\n        start: moment(e.start).toDate(),\r\n    }) )\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\"\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\"\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return  async(dispatch, getState) => {\r\n        const {uid, name} = getState().auth;\r\n        try{\r\n            const res = await fetchConToken( 'events', event, 'POST' );\r\n            const body = await res.json();\r\n\r\n            if( body.ok ){\r\n                event.id = body.event.id;\r\n                event.user = { _id: uid, name:  name}\r\n                dispatch( eventAddNew(event) )\r\n            }\r\n\r\n        } catch (e){\r\n            console.log(e);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n})\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n})\r\n\r\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent })\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async(dispatch) => {\r\n        try{\r\n            const res = await fetchConToken( `events/${event.id}`, event, 'PUT' );\r\n            const body = await res.json();\r\n\r\n            if(body.ok){\r\n                dispatch( eventUpdated(event) )\r\n            } else {\r\n                Swal.fire('Error!', body.msg || 'Could not update event :(', 'error')\r\n            }\r\n\r\n        } catch (error){\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdate,\r\n    payload: event\r\n})\r\n\r\nexport const eventStartDelete = () => {\r\n    \r\n    return async(dispatch, getState) => {\r\n\r\n        const {id} = getState().calendar.activeEvent;\r\n        try{\r\n            const res = await fetchConToken( `events/${id}`, {}, 'DELETE' );\r\n            const body = await res.json();\r\n\r\n            if(body.ok){\r\n                dispatch( eventDeleted() )\r\n            } else {\r\n                Swal.fire('Error!', body.msg || 'Could not delete the event :(', 'error')\r\n            }\r\n\r\n        } catch (e){\r\n            console.log(e);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({ type: types.eventDeleted })\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n        try{\r\n            const res = await fetchConToken( 'events', 'GET' );\r\n            const body = await res.json();\r\n            const events = prepareEvents(body.events);\r\n\r\n            dispatch( eventLoaded(events) )\r\n\r\n        } catch (e){\r\n            console.log(e);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout = () => ({type: types.eventLogout})\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { eventLogout } from '../../actions/events';\r\n\r\nexport const NavBar = () => {\r\n\r\n    const {name} = useSelector( state => state.auth );\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() )\r\n        dispatch( eventLogout() )\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">{name}</span>\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={handleLogout}\r\n            >\r\n                Exit\r\n                <i className=\" ml-2 fas fa-sign-out-alt\"></i>\r\n            </button>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <span>{title}</span>\r\n            <strong> -{user.name}</strong>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal })\r\n\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal })","import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-modal';\r\nimport moment from 'moment'\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventStartAddNew, eventClearActiveEvent, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst future = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n        title: '',\r\n        notes: '',\r\n        start: now.toDate(),\r\n        end: future.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const {modalOpen} = useSelector(state => state.ui)\r\n    const {activeEvent} = useSelector(state => state.calendar)\r\n    const dispatch = useDispatch();\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(future.toDate());\r\n    const [titleValid, setTitleValid] = useState(true)\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if(activeEvent){\r\n            setFormValues(activeEvent)\r\n        } else{\r\n            setFormValues(initEvent)\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventClearActiveEvent() );\r\n        setFormValues(initEvent)\r\n    }\r\n    \r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const mStart = moment(start)\r\n        const mEnd   = moment(end)\r\n\r\n        if(mStart.isSameOrAfter(mEnd)){\r\n            return Swal.fire('Error!', 'End date should be later than begin date!', 'error');\r\n        }\r\n        if( title.trim().length < 2 ){\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if( activeEvent ){\r\n            dispatch( eventStartUpdate(formValues) )\r\n        } else{\r\n            dispatch( eventStartAddNew( formValues ) )\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal()\r\n\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            className=\"modal\"\r\n            closeTimeoutMS={200}\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> { activeEvent ? `Editing: ${activeEvent.title}` : 'New Event'} </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                // onSubmit={ handleSubmitForm }\r\n            >\r\n                <div className=\"form-group\">\r\n                    <label>Beginning Date and Time</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>End Date and Time</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        minDate={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Title y notes</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Event's title\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Short desc</small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notes\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Additional info</small>\r\n                </div>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                    onClick={handleSubmitForm}\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Save</span>\r\n                </button>\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n    const handleClickNew = () => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    return (\r\n        <button \r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleClickNew}\r\n        > \r\n            <i className=\" fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete() )\r\n    }\r\n\r\n    return (\r\n        <button \r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        > \r\n            <i className=\" fas fa-trash\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport {NavBar} from '../ui/NavBar'\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nconst localizer = momentLocalizer(moment);\r\nlet events = []\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const [lastView, setlastView] = useState( localStorage.getItem('lastView') || 'month' );\r\n    const dispatch = useDispatch();\r\n    const {events: eventsStore, activeEvent} = useSelector( state => state.calendar );\r\n    const {uid} = useSelector( state => state.auth );\r\n\r\n    useEffect(() => {\r\n        dispatch( eventStartLoading() )\r\n    }, [dispatch])\r\n    \r\n\r\n    events = eventsStore;\r\n\r\n    const onDoubleClick = (e) => {\r\n        // console.log(e)\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch( eventSetActive(e) );\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setlastView(e);\r\n        localStorage.setItem('lastView', e)\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch( eventClearActiveEvent() )\r\n    }\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n        \r\n        const style = {\r\n            backgroundColor: uid === event.user._id ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <NavBar/>\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot= {onSelectSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n            <CalendarModal/>\r\n            <AddNewFab/>\r\n\r\n            { activeEvent && <DeleteEventFab/> }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\nimport PropTypes from 'prop-types/'\r\n\r\nexport const PrivateRoute = ({isAuthenticated, component: Component, ...rest}) => {\r\n\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            component = { (props) => (\r\n                isAuthenticated ? <Component {...props}/> : <Redirect to=\"/login\"/>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\nimport PropTypes from 'prop-types/'\r\n\r\nexport const PublicRoute = ({isAuthenticated, component: Component, ...rest}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component = { (props) => ( !isAuthenticated ? <Component {...props}/> : <Redirect to=\"/\"/>)}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect\r\n//   Link\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {checking, uid} = useSelector( state => state.auth );\r\n\r\n    useEffect(() => {\r\n        dispatch( startChecking() )\r\n    }, [dispatch])\r\n\r\n    if(checking){\r\n        return <h1>Validating your credentials, please wait...</h1>\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute exact path=\"/login\" component={LoginScreen} isAuthenticated={!!uid}></PublicRoute>\r\n                    <PrivateRoute exact path=\"/\" component={CalendarScreen} isAuthenticated={!!uid}></PrivateRoute>\r\n\r\n                    <Redirect to=\"/\"></Redirect>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return{\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false,\r\n            };\r\n        \r\n        case types.authCheckingFinish:\r\n            return{\r\n                ...state,\r\n                checking: false,\r\n            };\r\n        \r\n        case types.authLogout:\r\n            return{\r\n                checking: false,\r\n            };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\"\r\n\r\n// {\r\n//     id: dsjdsdkljsldkj,\r\n//     title: 'My bd',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Paco'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            };\r\n        \r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, action.payload]\r\n            };\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            };\r\n        \r\n        case types.eventUpdate:\r\n            return {\r\n                ...state,\r\n                events: state.events.map( e => (e.id === action.payload.id) ? action.payload : e )\r\n            };\r\n        \r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter( e => (e.id !== state.activeEvent.id)),\r\n                activeEvent: null\r\n            };\r\n        \r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            };\r\n        \r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n        \r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { authReducer } from './authReducer'\r\nimport { calendarReducer } from './calendarReducer'\r\nimport { uiReducer } from './uiReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer} from '../reducers/rootReducer'\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer, \r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport {AppRouter} from './routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css'\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}